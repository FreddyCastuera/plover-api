const mongoose = require('mongoose')
//quiero hacer cambios aqui
const patientsSchema = new mongoose.Schema({
    name:{
        type:String,
        required:true,
        lowercase:true,
        trim:true,
    },
    lastName:{
        type:String,
        required:true,
        lowercase:true,
        trim:true,
    },
    email:{
        type:String,
        required:true,
        lowercase:true,
        match: /.*@.*\..*/
    },
    password:{
        type:String,
        required:true
    },
    userImage:{
        type:String
      },
    gender:{
        type:String,
        required:true,
        lowercase:true,
        trim:true,
        enum: { values: ['hombre','mujer','otro'], message: '{VALUE} is not supported' }
    },
    age:{
        type:Number,
        required:true,
        min:0,
        max:200
    },
    height:{
        type:Number,
        required:true,
        min:0,
        max:3.0
    },
    weigth:{
        type:Number,
        required:true,
        min:0,
        max:500
    },
    bloodType:{
        type:String,
        required:true,
        uppercase:true,
        trim:true,
        enum:{values:['A+','O+','B+','AB+','A-','O-','B-','AB-'], message: '{VALUE} is not supported'}
    },
    maritalStatus:{
        type:String,
        required:true,
        lowercase:true,
        trim:true,
    },
    address:{
        state:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        city:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        neighborhood:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        street:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        streetNumber:{
            type:Number,
            required:true,
        },
        innerNumber:{
            type:Number,
        }
    },
    familyPractitioner:{
        name:{
            type:String,
            lowercase:true,
            trim:true,
        },
        lastName:{
            type:String,
            lowercase:true,
            trim:true,
        },
        email:{
            type:String,
            lowercase:true,
            trim:true,
        },
        phoneNumber:{
            type:String,
            lowercase:true,
            trim:true,
        }
    },
    personInCharge:{
        name:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        lastName:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        email:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        },
        phoneNumber:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
        }  
    },
    familyBackground:{
        father:{
            pathologies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
                default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        mother:{
            pathologies:{   
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
            default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        grandFather:{
            pathologies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
                default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        grandFather:{
            pathologies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
                default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        partner:{
            pathologies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
                default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        brothers:{
            pathologies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }],
                default:[],
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        }
    },
    pathologicalBackground:{
        currentDiseases:{
            type:[{
                type:String,
                lowercase:true,
                trim:true,
            }], 
            default:[]
        },
        previousDiseases:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }], 
                default:[]
            },
        drugAllergies:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }], 
                default:[]
            },
        currentMedications:{
                type:[{
                    type:String,
                    lowercase:true,
                    trim:true,
                }], 
                default:[]
        },
        previousOperations:{
            response:{
                type:String,
                required:true,
                lowercase:true,
                trim:true,
                enum: { values: ['si','no'], message: '{VALUE} is not supported' }
            },
            description:{
                type:String,
                lowercase:true,
                trim:true,
            }
        },
        bloodDonation:{
                type:String,
                required:true,
                lowercase:true,
                trim:true,
                enum: { values: ['si','no'], message: '{VALUE} is not supported' }
        },
        birthControlPills:{
                type:String,
                required:true,
                lowercase:true,
                trim:true,
                enum: { values: ['si','no'], message: '{VALUE} is not supported' }
            
        },
        observations:{
            type:String,
            lowercase:true,
            trim:true,
        },  
    },
    nonPathologicalBackground:{
        feeding:{
            type:String,
            required:true,
            lowercase:true,
            trim:true,
            enum: { values: ['buena','mala','regular'], message: '{VALUE} is not supported' }
        },
        toothBrushingFrequency:{
            type:Number,
            min:0,
            required:true,
        },
        vaccines:{
            type:[{
                type:String,
                lowercase:true,
                trim:true,
            }], 
            default:[]
        },
        addictions:{
            type:[{
                type:String,
                lowercase:true,
                trim:true,
            }], 
            default:[]
        },
        alcoholConsumption:{
                type:String,
                lowercase:true,
                trim:true,
                required:true,
                enum: { values: ['nunca he tomado','no tomo','una vez al día','una vez a la semana','una vez cada quince dias','una vez al mes'], message: '{VALUE} is not supported' }
            },
        
        cigarConsumption:{
                type:String,
                lowercase:true,
                trim:true,
                required:true,
                enum: { values: ['nunca he fumado','no fumo','10 cajetillas ó menos al mes','11 a 20 cajetillas ó menos al mes','21 a 30 cajetillas ó menos al mes','31 ó mas cajetillas mes'], message: '{VALUE} is not supported' }
        },
        recentTattos:{
            type:String,
            lowercase:true,
            trim:true,
            required:true,
            enum: { values: ['si','no'], message: '{VALUE} is not supported' }
        },
        hygieneDescription:{
            type:String,
            lowercase:true,
            trim:true,
        },
        services:{
            type:[{
                type:String,
                lowercase:true,
                trim:true,
            }], 
            default:[]
        },
        unusualHabits:{
            type:String,
            lowercase:true,
            trim:true,
        },
        observations:{
            type:String,
            lowercase:true,
            trim:true,
        }
    }
},{ timestamps: true })

const model = mongoose.model('patients', patientsSchema)

module.exports = model